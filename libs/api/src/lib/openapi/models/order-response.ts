/* tslint:disable */
/* eslint-disable */
/**
 * Demo Shop API
 * A comprehensive API for managing an online store, providing endpoints for product catalog, user management, shopping cart operations, and order processing
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { OrderStatus } from './order-status';
import { OrderStatusFromJSON, OrderStatusToJSON } from './order-status';
import type { OrderItemResponse } from './order-item-response';
import { OrderItemResponseFromJSON, OrderItemResponseToJSON } from './order-item-response';

/**
 *
 * @export
 * @interface OrderResponse
 */
export interface OrderResponse {
  /**
   *
   * @type {number}
   * @memberof OrderResponse
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof OrderResponse
   */
  userId: number;
  /**
   *
   * @type {Array<OrderItemResponse>}
   * @memberof OrderResponse
   */
  items: Array<OrderItemResponse>;
  /**
   *
   * @type {number}
   * @memberof OrderResponse
   */
  amount: number;
  /**
   *
   * @type {OrderStatus}
   * @memberof OrderResponse
   */
  status: OrderStatus;
  /**
   *
   * @type {Date}
   * @memberof OrderResponse
   */
  created: Date;
}


/**
 * Check if a given object implements the OrderResponse interface.
 */
export function instanceOfOrderResponse(value: object): value is OrderResponse {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('userId' in value) || value['userId'] === undefined) return false;
  if (!('items' in value) || value['items'] === undefined) return false;
  if (!('amount' in value) || value['amount'] === undefined) return false;
  if (!('status' in value) || value['status'] === undefined) return false;
  if (!('created' in value) || value['created'] === undefined) return false;
  return true;
}

export function OrderResponseFromJSON(json: any): OrderResponse {
  return OrderResponseFromJSONTyped(json, false);
}

export function OrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponse {
  if (json == null) {
    return json;
  }
  return {

    'id': json['id'],
    'userId': json['userId'],
    'items': ((json['items'] as Array<any>).map(OrderItemResponseFromJSON)),
    'amount': json['amount'],
    'status': OrderStatusFromJSON(json['status']),
    'created': (new Date(json['created'])),
  };
}

export function OrderResponseToJSON(json: any): OrderResponse {
  return OrderResponseToJSONTyped(json, false);
}

export function OrderResponseToJSONTyped(value?: OrderResponse | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {

    'id': value['id'],
    'userId': value['userId'],
    'items': ((value['items'] as Array<any>).map(OrderItemResponseToJSON)),
    'amount': value['amount'],
    'status': OrderStatusToJSON(value['status']),
    'created': ((value['created']).toISOString()),
  };
}

