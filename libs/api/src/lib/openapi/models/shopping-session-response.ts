/* tslint:disable */
/* eslint-disable */
/**
 * Demo Shop API
 * A comprehensive API for managing an online store, providing endpoints for product catalog, user management, shopping cart operations, and order processing
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CartItemResponse } from './cart-item-response';
import {
  CartItemResponseFromJSON,
  CartItemResponseFromJSONTyped,
  CartItemResponseToJSON,
  CartItemResponseToJSONTyped,
} from './cart-item-response';

/**
 *
 * @export
 * @interface ShoppingSessionResponse
 */
export interface ShoppingSessionResponse {
  /**
   *
   * @type {number}
   * @memberof ShoppingSessionResponse
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof ShoppingSessionResponse
   */
  userId: number;
  /**
   *
   * @type {Array<CartItemResponse>}
   * @memberof ShoppingSessionResponse
   */
  items: Array<CartItemResponse>;
}

/**
 * Check if a given object implements the ShoppingSessionResponse interface.
 */
export function instanceOfShoppingSessionResponse(value: object): value is ShoppingSessionResponse {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('userId' in value) || value['userId'] === undefined) return false;
  if (!('items' in value) || value['items'] === undefined) return false;
  return true;
}

export function ShoppingSessionResponseFromJSON(json: any): ShoppingSessionResponse {
  return ShoppingSessionResponseFromJSONTyped(json, false);
}

export function ShoppingSessionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShoppingSessionResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    userId: json['userId'],
    items: (json['items'] as Array<any>).map(CartItemResponseFromJSON),
  };
}

export function ShoppingSessionResponseToJSON(json: any): ShoppingSessionResponse {
  return ShoppingSessionResponseToJSONTyped(json, false);
}

export function ShoppingSessionResponseToJSONTyped(
  value?: ShoppingSessionResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    userId: value['userId'],
    items: (value['items'] as Array<any>).map(CartItemResponseToJSON),
  };
}
